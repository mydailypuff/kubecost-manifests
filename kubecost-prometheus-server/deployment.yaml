# Source: cost-analyzer/charts/prometheus/templates/server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: "server"
    app: prometheus
    release: kubecost
    chart: prometheus-11.0.2
    heritage: Helm
  name: kubecost-prometheus-server
  namespace: kubecost
spec:
  selector:
    matchLabels:
      component: "server"
      app: prometheus
      release: kubecost
      chart: prometheus-11.0.2
      heritage: Helm
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        component: "server"
        app: prometheus
        release: kubecost
        chart: prometheus-11.0.2
        heritage: Helm
    spec:
      serviceAccountName: kubecost-prometheus-server
      containers:
        - name: prometheus-server-configmap-reload
          image: "jimmidyson/configmap-reload:v0.7.1"
          imagePullPolicy: "IfNotPresent"
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9090/-/reload
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: false

        - name: prometheus-server
          image: "quay.io/prometheus/prometheus:v2.35.0"
          imagePullPolicy: "IfNotPresent"
          args:
            - --storage.tsdb.retention.time=90d
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
            - --query.max-concurrency=1
            - --query.max-samples=1e+08
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
            failureThreshold: 3
            successThreshold: 1
          resources:
            {}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: false
            - name: storage-volume
              mountPath: /data
              subPath: "queries.active"
              readOnly: false
      securityContext:
        fsGroup: 0
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: kubecost-prometheus-server
        - name: storage-volume
          persistentVolumeClaim:
            claimName: kubecost-prometheus-server